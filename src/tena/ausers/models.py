"""
`ausers` models for tena project.

Generated by 'python3 manage.py startapp' using Django 3.1.7.
 * NAME: Wendirad Demelash
 * DATE: April 3, 2021
"""
import json

from django.contrib.auth.models import AbstractUser
from django.core.validators import MinLengthValidator, RegexValidator
from django.db import models
from django.utils.translation import gettext_lazy as _
from smart_selects.db_fields import ChainedForeignKey


class User(AbstractUser):
    """ Custome User Model with to generalizer all users of platform. """
    SEX = (
        ('M', _('Male')),
        ('F', _('Female'))
    )
    sex = models.CharField(_('Sex'), max_length=2, choices=SEX)

class Region(models.Model):
    name = models.CharField(_('Name'), max_length=255)

class Zone(models.Model):
    region = models.ForeignKey(Region, verbose_name=_('Region'), on_delete=models.CASCADE)
    name = models.CharField(_('Name'), max_length=255)

class Woreda(models.Model):
    zone = models.ForeignKey(Zone, verbose_name=_('Zone'), on_delete=models.CASCADE)
    name = models.CharField(max_length=255)

class Address(models.Model):
    """ Implement common address attributes
            - Region
            - Zone
            - Woreda
            - House Number
    """
    region = models.ForeignKey(Region, verbose_name=_('Region'), on_delete=models.SET_NULL, null=True)
    zone = ChainedForeignKey(
            Zone,
            verbose_name=_('Zone'),
            chained_field='region',
            chained_model_field='region',
            show_all=False,
        )
    woreda = ChainedForeignKey(
            Woreda,
            verbose_name=_('Woreda'),
            chained_field='woreda',
            chained_model_field='woreda',
            show_all=False,
        )
    house_number = models.CharField(_('House number'), max_length=6)

    class Meta:
        abstract = True

class Customer(User, Address):
    phone_regex = RegexValidator(
        r'(\+2519|09)\d{8}$',
        message='Please enter your phone number in +2519********'
                ' or 09******** format.'
    )
    phone_number = models.CharField(_('Phone number'), max_length=13, validators=[phone_regex])
